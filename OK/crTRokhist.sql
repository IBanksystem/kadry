CREATE OR REPLACE TRIGGER TR_OK_ACADEMIC_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_ACADEMIC
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_ACADEMIC (ID,BRANCH,PERSONAL_CODE,ACADEMIC_CODE,ACADEMIC_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.ID,:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.ACADEMIC_CODE,:NEW.ACADEMIC_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_ACADEMIC (ID,BRANCH,PERSONAL_CODE,ACADEMIC_CODE,ACADEMIC_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.ID,:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.ACADEMIC_CODE,:NEW.ACADEMIC_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_ACADEMIC (ID,BRANCH,PERSONAL_CODE,ACADEMIC_CODE,ACADEMIC_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.ID,:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.ACADEMIC_CODE,:OLD.ACADEMIC_DATE,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.STATE,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_AWARD_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_AWARD
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_AWARD (BRANCH,PERSONAL_CODE,AWARD_DATE,AWARD_INFO,EMP_CODE,INS_DATE,AWARD_DATE_MM,AWARD_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.AWARD_DATE,:NEW.AWARD_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.AWARD_DATE_MM,:NEW.AWARD_DATE_DD,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_AWARD (BRANCH,PERSONAL_CODE,AWARD_DATE,AWARD_INFO,EMP_CODE,INS_DATE,AWARD_DATE_MM,AWARD_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.AWARD_DATE,:NEW.AWARD_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.AWARD_DATE_MM,:NEW.AWARD_DATE_DD,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_AWARD (BRANCH,PERSONAL_CODE,AWARD_DATE,AWARD_INFO,EMP_CODE,INS_DATE,AWARD_DATE_MM,AWARD_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.AWARD_DATE,:OLD.AWARD_INFO,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.AWARD_DATE_MM,:OLD.AWARD_DATE_DD,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_CHANGE_FIO_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_CHANGE_FIO
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_CHANGE_FIO (BRANCH,PERSONAL_CODE,FAMILY,FIRST_NAME,PATRONYMIC,CHANGE_DATE,CHANGE_MOTIVE,EMP_CODE,INS_DATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.FAMILY,:NEW.FIRST_NAME,:NEW.PATRONYMIC,:NEW.CHANGE_DATE,:NEW.CHANGE_MOTIVE,:NEW.EMP_CODE,:NEW.INS_DATE,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_CHANGE_FIO (BRANCH,PERSONAL_CODE,FAMILY,FIRST_NAME,PATRONYMIC,CHANGE_DATE,CHANGE_MOTIVE,EMP_CODE,INS_DATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.FAMILY,:NEW.FIRST_NAME,:NEW.PATRONYMIC,:NEW.CHANGE_DATE,:NEW.CHANGE_MOTIVE,:NEW.EMP_CODE,:NEW.INS_DATE,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_CHANGE_FIO (BRANCH,PERSONAL_CODE,FAMILY,FIRST_NAME,PATRONYMIC,CHANGE_DATE,CHANGE_MOTIVE,EMP_CODE,INS_DATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.FAMILY,:OLD.FIRST_NAME,:OLD.PATRONYMIC,:OLD.CHANGE_DATE,:OLD.CHANGE_MOTIVE,:OLD.EMP_CODE,:OLD.INS_DATE,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_DEGREE_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_DEGREE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_DEGREE (BRANCH,PERSONAL_CODE,DEGREE_CODE,DEGREE_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.DEGREE_CODE,:NEW.DEGREE_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_DEGREE (BRANCH,PERSONAL_CODE,DEGREE_CODE,DEGREE_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.DEGREE_CODE,:NEW.DEGREE_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_DEGREE (BRANCH,PERSONAL_CODE,DEGREE_CODE,DEGREE_DATE,EMP_CODE,INS_DATE,STATE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.DEGREE_CODE,:OLD.DEGREE_DATE,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.STATE,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_EDUCATION_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_EDUCATION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_EDUCATION (BRANCH,PERSONAL_CODE,EDUCATION_CODE,BASIS_CODE,INSTITUTION_CODE,BEGIN_DATE,END_DATE,PROFESSION_PERSONAL,QUALIFICATION_CODE,DIPLOM_NUM,EMP_CODE,INS_DATE,COD_VUZ_PRIM,CURS,FAKULTET,NOSTRA,NOSTRA_SERIES,NOSTRA_NUMBER,NOSTRA_DATE,DIPLOM_DATE,BEGIN_DATE_MM,BEGIN_DATE_DD,END_DATE_MM,END_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.EDUCATION_CODE,:NEW.BASIS_CODE,:NEW.INSTITUTION_CODE,:NEW.BEGIN_DATE,:NEW.END_DATE,:NEW.PROFESSION_PERSONAL,:NEW.QUALIFICATION_CODE,:NEW.DIPLOM_NUM,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.COD_VUZ_PRIM,:NEW.CURS,:NEW.FAKULTET,:NEW.NOSTRA,:NEW.NOSTRA_SERIES,:NEW.NOSTRA_NUMBER,:NEW.NOSTRA_DATE,:NEW.DIPLOM_DATE,:NEW.BEGIN_DATE_MM,:NEW.BEGIN_DATE_DD,:NEW.END_DATE_MM,:NEW.END_DATE_DD,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_EDUCATION (BRANCH,PERSONAL_CODE,EDUCATION_CODE,BASIS_CODE,INSTITUTION_CODE,BEGIN_DATE,END_DATE,PROFESSION_PERSONAL,QUALIFICATION_CODE,DIPLOM_NUM,EMP_CODE,INS_DATE,COD_VUZ_PRIM,CURS,FAKULTET,NOSTRA,NOSTRA_SERIES,NOSTRA_NUMBER,NOSTRA_DATE,DIPLOM_DATE,BEGIN_DATE_MM,BEGIN_DATE_DD,END_DATE_MM,END_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.EDUCATION_CODE,:NEW.BASIS_CODE,:NEW.INSTITUTION_CODE,:NEW.BEGIN_DATE,:NEW.END_DATE,:NEW.PROFESSION_PERSONAL,:NEW.QUALIFICATION_CODE,:NEW.DIPLOM_NUM,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.COD_VUZ_PRIM,:NEW.CURS,:NEW.FAKULTET,:NEW.NOSTRA,:NEW.NOSTRA_SERIES,:NEW.NOSTRA_NUMBER,:NEW.NOSTRA_DATE,:NEW.DIPLOM_DATE,:NEW.BEGIN_DATE_MM,:NEW.BEGIN_DATE_DD,:NEW.END_DATE_MM,:NEW.END_DATE_DD,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_EDUCATION (BRANCH,PERSONAL_CODE,EDUCATION_CODE,BASIS_CODE,INSTITUTION_CODE,BEGIN_DATE,END_DATE,PROFESSION_PERSONAL,QUALIFICATION_CODE,DIPLOM_NUM,EMP_CODE,INS_DATE,COD_VUZ_PRIM,CURS,FAKULTET,NOSTRA,NOSTRA_SERIES,NOSTRA_NUMBER,NOSTRA_DATE,DIPLOM_DATE,BEGIN_DATE_MM,BEGIN_DATE_DD,END_DATE_MM,END_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.EDUCATION_CODE,:OLD.BASIS_CODE,:OLD.INSTITUTION_CODE,:OLD.BEGIN_DATE,:OLD.END_DATE,:OLD.PROFESSION_PERSONAL,:OLD.QUALIFICATION_CODE,:OLD.DIPLOM_NUM,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.COD_VUZ_PRIM,:OLD.CURS,:OLD.FAKULTET,:OLD.NOSTRA,:OLD.NOSTRA_SERIES,:OLD.NOSTRA_NUMBER,:OLD.NOSTRA_DATE,:OLD.DIPLOM_DATE,:OLD.BEGIN_DATE_MM,:OLD.BEGIN_DATE_DD,:OLD.END_DATE_MM,:OLD.END_DATE_DD,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_ELECTION_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_ELECTION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_ELECTION (BRANCH,PERSONAL_CODE,ELECTION_CODE,ELECTION_POST,ELECTION_DATE_BEGIN,ELECTION_DATE_END,EMP_CODE,INS_DATE,ELECTION_ADDRESS,ELECTION_NAME,ELECTION_DATE_BEGIN_MM,ELECTION_DATE_BEGIN_DD,ELECTION_DATE_END_MM,ELECTION_DATE_END_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.ELECTION_CODE,:NEW.ELECTION_POST,:NEW.ELECTION_DATE_BEGIN,:NEW.ELECTION_DATE_END,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.ELECTION_ADDRESS,:NEW.ELECTION_NAME,:NEW.ELECTION_DATE_BEGIN_MM,:NEW.ELECTION_DATE_BEGIN_DD,:NEW.ELECTION_DATE_END_MM,:NEW.ELECTION_DATE_END_DD,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_ELECTION (BRANCH,PERSONAL_CODE,ELECTION_CODE,ELECTION_POST,ELECTION_DATE_BEGIN,ELECTION_DATE_END,EMP_CODE,INS_DATE,ELECTION_ADDRESS,ELECTION_NAME,ELECTION_DATE_BEGIN_MM,ELECTION_DATE_BEGIN_DD,ELECTION_DATE_END_MM,ELECTION_DATE_END_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.ELECTION_CODE,:NEW.ELECTION_POST,:NEW.ELECTION_DATE_BEGIN,:NEW.ELECTION_DATE_END,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.ELECTION_ADDRESS,:NEW.ELECTION_NAME,:NEW.ELECTION_DATE_BEGIN_MM,:NEW.ELECTION_DATE_BEGIN_DD,:NEW.ELECTION_DATE_END_MM,:NEW.ELECTION_DATE_END_DD,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_ELECTION (BRANCH,PERSONAL_CODE,ELECTION_CODE,ELECTION_POST,ELECTION_DATE_BEGIN,ELECTION_DATE_END,EMP_CODE,INS_DATE,ELECTION_ADDRESS,ELECTION_NAME,ELECTION_DATE_BEGIN_MM,ELECTION_DATE_BEGIN_DD,ELECTION_DATE_END_MM,ELECTION_DATE_END_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.ELECTION_CODE,:OLD.ELECTION_POST,:OLD.ELECTION_DATE_BEGIN,:OLD.ELECTION_DATE_END,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.ELECTION_ADDRESS,:OLD.ELECTION_NAME,:OLD.ELECTION_DATE_BEGIN_MM,:OLD.ELECTION_DATE_BEGIN_DD,:OLD.ELECTION_DATE_END_MM,:OLD.ELECTION_DATE_END_DD,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_LANGUAGE_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_LANGUAGE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_LANGUAGE (BRANCH,PERSONAL_CODE,LANGUAGE_CODE,LEVEL_CODE,EMP_CODE,INS_DATE,STATE,COD_LANG_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.LANGUAGE_CODE,:NEW.LEVEL_CODE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,:NEW.COD_LANG_PRIM,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_LANGUAGE (BRANCH,PERSONAL_CODE,LANGUAGE_CODE,LEVEL_CODE,EMP_CODE,INS_DATE,STATE,COD_LANG_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.LANGUAGE_CODE,:NEW.LEVEL_CODE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.STATE,:NEW.COD_LANG_PRIM,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_LANGUAGE (BRANCH,PERSONAL_CODE,LANGUAGE_CODE,LEVEL_CODE,EMP_CODE,INS_DATE,STATE,COD_LANG_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.LANGUAGE_CODE,:OLD.LEVEL_CODE,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.STATE,:OLD.COD_LANG_PRIM,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_PARTY_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_PARTY
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_PARTY (BRANCH,PERSONAL_CODE,PARTY_CODE,OUT_PARTY,PARTY_DATE,PARTY_OUTDATE,PUNISHMENT_MOTIVE,PUNISHMENT_DATE,EMP_CODE,INS_DATE,CODE_PARTII_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.PARTY_CODE,:NEW.OUT_PARTY,:NEW.PARTY_DATE,:NEW.PARTY_OUTDATE,:NEW.PUNISHMENT_MOTIVE,:NEW.PUNISHMENT_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.CODE_PARTII_PRIM,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_PARTY (BRANCH,PERSONAL_CODE,PARTY_CODE,OUT_PARTY,PARTY_DATE,PARTY_OUTDATE,PUNISHMENT_MOTIVE,PUNISHMENT_DATE,EMP_CODE,INS_DATE,CODE_PARTII_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.PARTY_CODE,:NEW.OUT_PARTY,:NEW.PARTY_DATE,:NEW.PARTY_OUTDATE,:NEW.PUNISHMENT_MOTIVE,:NEW.PUNISHMENT_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.CODE_PARTII_PRIM,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_PARTY (BRANCH,PERSONAL_CODE,PARTY_CODE,OUT_PARTY,PARTY_DATE,PARTY_OUTDATE,PUNISHMENT_MOTIVE,PUNISHMENT_DATE,EMP_CODE,INS_DATE,CODE_PARTII_PRIM, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.PARTY_CODE,:OLD.OUT_PARTY,:OLD.PARTY_DATE,:OLD.PARTY_OUTDATE,:OLD.PUNISHMENT_MOTIVE,:OLD.PUNISHMENT_DATE,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.CODE_PARTII_PRIM,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_PERIOD_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_PERIOD
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_PERIOD (BRANCH,PERSONAL_CODE,IN_OFFICE_DATE,OUT_OFFICE_DATE,OFFICE_NAME,OFFICE_ADDRESS,ESTABLISHED_POST,ESTABLISHED_DEPARTMENT,BASE_MOVE_CODE,TYPE_PERIOD_CODE,ARTICLE_CODE,BASIS_NUM,BASIS_DATE,EMP_CODE,INS_DATE,PRIZ_SYSTEM,COD_BANK,COD_TYPE_PRN,COD_PR_OFF,PR_OFF,DATE_UTV_KM,NUMB_UTV_KM,DATE_PR_KVL,NUMB_PR_KVL,DATE_ATTEST,RESH_ATTEST,DOLJN_ID,NUM_PR_OFF,DATE_PR_OFF,POST_CODE,DEPARTMENT_CODE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.IN_OFFICE_DATE,:NEW.OUT_OFFICE_DATE,:NEW.OFFICE_NAME,:NEW.OFFICE_ADDRESS,:NEW.ESTABLISHED_POST,:NEW.ESTABLISHED_DEPARTMENT,:NEW.BASE_MOVE_CODE,:NEW.TYPE_PERIOD_CODE,:NEW.ARTICLE_CODE,:NEW.BASIS_NUM,:NEW.BASIS_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.PRIZ_SYSTEM,:NEW.COD_BANK,:NEW.COD_TYPE_PRN,:NEW.COD_PR_OFF,:NEW.PR_OFF,:NEW.DATE_UTV_KM,:NEW.NUMB_UTV_KM,:NEW.DATE_PR_KVL,:NEW.NUMB_PR_KVL,:NEW.DATE_ATTEST,:NEW.RESH_ATTEST,:NEW.DOLJN_ID,:NEW.NUM_PR_OFF,:NEW.DATE_PR_OFF,:NEW.POST_CODE,:NEW.DEPARTMENT_CODE,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_PERIOD (BRANCH,PERSONAL_CODE,IN_OFFICE_DATE,OUT_OFFICE_DATE,OFFICE_NAME,OFFICE_ADDRESS,ESTABLISHED_POST,ESTABLISHED_DEPARTMENT,BASE_MOVE_CODE,TYPE_PERIOD_CODE,ARTICLE_CODE,BASIS_NUM,BASIS_DATE,EMP_CODE,INS_DATE,PRIZ_SYSTEM,COD_BANK,COD_TYPE_PRN,COD_PR_OFF,PR_OFF,DATE_UTV_KM,NUMB_UTV_KM,DATE_PR_KVL,NUMB_PR_KVL,DATE_ATTEST,RESH_ATTEST,DOLJN_ID,NUM_PR_OFF,DATE_PR_OFF,POST_CODE,DEPARTMENT_CODE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.IN_OFFICE_DATE,:NEW.OUT_OFFICE_DATE,:NEW.OFFICE_NAME,:NEW.OFFICE_ADDRESS,:NEW.ESTABLISHED_POST,:NEW.ESTABLISHED_DEPARTMENT,:NEW.BASE_MOVE_CODE,:NEW.TYPE_PERIOD_CODE,:NEW.ARTICLE_CODE,:NEW.BASIS_NUM,:NEW.BASIS_DATE,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.PRIZ_SYSTEM,:NEW.COD_BANK,:NEW.COD_TYPE_PRN,:NEW.COD_PR_OFF,:NEW.PR_OFF,:NEW.DATE_UTV_KM,:NEW.NUMB_UTV_KM,:NEW.DATE_PR_KVL,:NEW.NUMB_PR_KVL,:NEW.DATE_ATTEST,:NEW.RESH_ATTEST,:NEW.DOLJN_ID,:NEW.NUM_PR_OFF,:NEW.DATE_PR_OFF,:NEW.POST_CODE,:NEW.DEPARTMENT_CODE,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_PERIOD (BRANCH,PERSONAL_CODE,IN_OFFICE_DATE,OUT_OFFICE_DATE,OFFICE_NAME,OFFICE_ADDRESS,ESTABLISHED_POST,ESTABLISHED_DEPARTMENT,BASE_MOVE_CODE,TYPE_PERIOD_CODE,ARTICLE_CODE,BASIS_NUM,BASIS_DATE,EMP_CODE,INS_DATE,PRIZ_SYSTEM,COD_BANK,COD_TYPE_PRN,COD_PR_OFF,PR_OFF,DATE_UTV_KM,NUMB_UTV_KM,DATE_PR_KVL,NUMB_PR_KVL,DATE_ATTEST,RESH_ATTEST,DOLJN_ID,NUM_PR_OFF,DATE_PR_OFF,POST_CODE,DEPARTMENT_CODE, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.IN_OFFICE_DATE,:OLD.OUT_OFFICE_DATE,:OLD.OFFICE_NAME,:OLD.OFFICE_ADDRESS,:OLD.ESTABLISHED_POST,:OLD.ESTABLISHED_DEPARTMENT,:OLD.BASE_MOVE_CODE,:OLD.TYPE_PERIOD_CODE,:OLD.ARTICLE_CODE,:OLD.BASIS_NUM,:OLD.BASIS_DATE,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.PRIZ_SYSTEM,:OLD.COD_BANK,:OLD.COD_TYPE_PRN,:OLD.COD_PR_OFF,:OLD.PR_OFF,:OLD.DATE_UTV_KM,:OLD.NUMB_UTV_KM,:OLD.DATE_PR_KVL,:OLD.NUMB_PR_KVL,:OLD.DATE_ATTEST,:OLD.RESH_ATTEST,:OLD.DOLJN_ID,:OLD.NUM_PR_OFF,:OLD.DATE_PR_OFF,:OLD.POST_CODE,:OLD.DEPARTMENT_CODE,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_PERSONAL_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_PERSONAL
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_PERSONAL (BRANCH,PERSONAL_CODE,COLLEAGUE_CODE,STATUS_CODE,SALARY_CODE,FAMILY,FIRST_NAME,PATRONYMIC,GENDER_CODE,BIRTHDAY,REGION_ID,DISTR,NATIONALITY_CODE,FAMILY_STATUS_CODE,REG_TYPE_CODE,HOME_ADDRESS,HOME_ADDRESSFACT,PASS_SERIYA,PASS_NUM,PASS_DATE,PASS_REG,RECORD_BOOK_NUMBER,RECORD_BOOK_SERIES,TELEFON,EMP_CODE,INS_DATE,PROFMEMBER,TABNO,EDUCATION_TITLE_CODE,BIRTHPLACE,MOTIVE_OUT,BASIS_NUM,BASIS_DATE,LEAVE_CODE,DEPARTMENT_CODE,POST_CODE,NN,MOTIVE_DISMISSIAL_CODE,NPS_ID,SPECIAL_CODE,COD_DISTR_UVD,COD_DISTR_PRIM,COD_STR_BIRTH,COD_OBL_PRIM,COD_PLACE_BIRTH_PRIM,COD_SITIZENT,COD_STR_SITIZENT,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_DISTR_LIVE,COD_DISTR_LIVE_PRIM,CODE_NACI_PRIM,CHECK_KFS,IS_BOSS,BANK_SPEC,NOTICE,PRICH_ID,NAME_PR,INN,SROK_DATE,HOME_ADDRESSFACT_REGION_ID,HOME_ADDRESSFACT_DISTR,HOME_ADDRESS_REGION_ID,HOME_ADDRESS_DISTR,PASSPORT_TYPE_CODE,REGPLACE_CODE,PASS_DATE_END,GOSUBMIT_CODE,LIVE_PLACE,BIRTHPLACE_POINT,DEPARTMENT_CODE_OLD,POST_CODE_OLD,SPECIAL_CODE_OLD,MAIDEN_FAMILY, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.COLLEAGUE_CODE,:NEW.STATUS_CODE,:NEW.SALARY_CODE,:NEW.FAMILY,:NEW.FIRST_NAME,:NEW.PATRONYMIC,:NEW.GENDER_CODE,:NEW.BIRTHDAY,:NEW.REGION_ID,:NEW.DISTR,:NEW.NATIONALITY_CODE,:NEW.FAMILY_STATUS_CODE,:NEW.REG_TYPE_CODE,:NEW.HOME_ADDRESS,:NEW.HOME_ADDRESSFACT,:NEW.PASS_SERIYA,:NEW.PASS_NUM,:NEW.PASS_DATE,:NEW.PASS_REG,:NEW.RECORD_BOOK_NUMBER,:NEW.RECORD_BOOK_SERIES,:NEW.TELEFON,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.PROFMEMBER,:NEW.TABNO,:NEW.EDUCATION_TITLE_CODE,:NEW.BIRTHPLACE,:NEW.MOTIVE_OUT,:NEW.BASIS_NUM,:NEW.BASIS_DATE,:NEW.LEAVE_CODE,:NEW.DEPARTMENT_CODE,:NEW.POST_CODE,:NEW.NN,:NEW.MOTIVE_DISMISSIAL_CODE,:NEW.NPS_ID,:NEW.SPECIAL_CODE,:NEW.COD_DISTR_UVD,:NEW.COD_DISTR_PRIM,:NEW.COD_STR_BIRTH,:NEW.COD_OBL_PRIM,:NEW.COD_PLACE_BIRTH_PRIM,:NEW.COD_SITIZENT,:NEW.COD_STR_SITIZENT,:NEW.COD_STR_LIVE,:NEW.COD_OBL_LIVE,:NEW.COD_OBL_LIVE_PRIM,:NEW.COD_DISTR_LIVE,:NEW.COD_DISTR_LIVE_PRIM,:NEW.CODE_NACI_PRIM,:NEW.CHECK_KFS,:NEW.IS_BOSS,:NEW.BANK_SPEC,:NEW.NOTICE,:NEW.PRICH_ID,:NEW.NAME_PR,:NEW.INN,:NEW.SROK_DATE,:NEW.HOME_ADDRESSFACT_REGION_ID,:NEW.HOME_ADDRESSFACT_DISTR,:NEW.HOME_ADDRESS_REGION_ID,:NEW.HOME_ADDRESS_DISTR,:NEW.PASSPORT_TYPE_CODE,:NEW.REGPLACE_CODE,:NEW.PASS_DATE_END,:NEW.GOSUBMIT_CODE,:NEW.LIVE_PLACE,:NEW.BIRTHPLACE_POINT,:NEW.DEPARTMENT_CODE_OLD,:NEW.POST_CODE_OLD,:NEW.SPECIAL_CODE_OLD,:NEW.MAIDEN_FAMILY,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_PERSONAL (BRANCH,PERSONAL_CODE,COLLEAGUE_CODE,STATUS_CODE,SALARY_CODE,FAMILY,FIRST_NAME,PATRONYMIC,GENDER_CODE,BIRTHDAY,REGION_ID,DISTR,NATIONALITY_CODE,FAMILY_STATUS_CODE,REG_TYPE_CODE,HOME_ADDRESS,HOME_ADDRESSFACT,PASS_SERIYA,PASS_NUM,PASS_DATE,PASS_REG,RECORD_BOOK_NUMBER,RECORD_BOOK_SERIES,TELEFON,EMP_CODE,INS_DATE,PROFMEMBER,TABNO,EDUCATION_TITLE_CODE,BIRTHPLACE,MOTIVE_OUT,BASIS_NUM,BASIS_DATE,LEAVE_CODE,DEPARTMENT_CODE,POST_CODE,NN,MOTIVE_DISMISSIAL_CODE,NPS_ID,SPECIAL_CODE,COD_DISTR_UVD,COD_DISTR_PRIM,COD_STR_BIRTH,COD_OBL_PRIM,COD_PLACE_BIRTH_PRIM,COD_SITIZENT,COD_STR_SITIZENT,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_DISTR_LIVE,COD_DISTR_LIVE_PRIM,CODE_NACI_PRIM,CHECK_KFS,IS_BOSS,BANK_SPEC,NOTICE,PRICH_ID,NAME_PR,INN,SROK_DATE,HOME_ADDRESSFACT_REGION_ID,HOME_ADDRESSFACT_DISTR,HOME_ADDRESS_REGION_ID,HOME_ADDRESS_DISTR,PASSPORT_TYPE_CODE,REGPLACE_CODE,PASS_DATE_END,GOSUBMIT_CODE,LIVE_PLACE,BIRTHPLACE_POINT,DEPARTMENT_CODE_OLD,POST_CODE_OLD,SPECIAL_CODE_OLD,MAIDEN_FAMILY, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.COLLEAGUE_CODE,:NEW.STATUS_CODE,:NEW.SALARY_CODE,:NEW.FAMILY,:NEW.FIRST_NAME,:NEW.PATRONYMIC,:NEW.GENDER_CODE,:NEW.BIRTHDAY,:NEW.REGION_ID,:NEW.DISTR,:NEW.NATIONALITY_CODE,:NEW.FAMILY_STATUS_CODE,:NEW.REG_TYPE_CODE,:NEW.HOME_ADDRESS,:NEW.HOME_ADDRESSFACT,:NEW.PASS_SERIYA,:NEW.PASS_NUM,:NEW.PASS_DATE,:NEW.PASS_REG,:NEW.RECORD_BOOK_NUMBER,:NEW.RECORD_BOOK_SERIES,:NEW.TELEFON,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.PROFMEMBER,:NEW.TABNO,:NEW.EDUCATION_TITLE_CODE,:NEW.BIRTHPLACE,:NEW.MOTIVE_OUT,:NEW.BASIS_NUM,:NEW.BASIS_DATE,:NEW.LEAVE_CODE,:NEW.DEPARTMENT_CODE,:NEW.POST_CODE,:NEW.NN,:NEW.MOTIVE_DISMISSIAL_CODE,:NEW.NPS_ID,:NEW.SPECIAL_CODE,:NEW.COD_DISTR_UVD,:NEW.COD_DISTR_PRIM,:NEW.COD_STR_BIRTH,:NEW.COD_OBL_PRIM,:NEW.COD_PLACE_BIRTH_PRIM,:NEW.COD_SITIZENT,:NEW.COD_STR_SITIZENT,:NEW.COD_STR_LIVE,:NEW.COD_OBL_LIVE,:NEW.COD_OBL_LIVE_PRIM,:NEW.COD_DISTR_LIVE,:NEW.COD_DISTR_LIVE_PRIM,:NEW.CODE_NACI_PRIM,:NEW.CHECK_KFS,:NEW.IS_BOSS,:NEW.BANK_SPEC,:NEW.NOTICE,:NEW.PRICH_ID,:NEW.NAME_PR,:NEW.INN,:NEW.SROK_DATE,:NEW.HOME_ADDRESSFACT_REGION_ID,:NEW.HOME_ADDRESSFACT_DISTR,:NEW.HOME_ADDRESS_REGION_ID,:NEW.HOME_ADDRESS_DISTR,:NEW.PASSPORT_TYPE_CODE,:NEW.REGPLACE_CODE,:NEW.PASS_DATE_END,:NEW.GOSUBMIT_CODE,:NEW.LIVE_PLACE,:NEW.BIRTHPLACE_POINT,:NEW.DEPARTMENT_CODE_OLD,:NEW.POST_CODE_OLD,:NEW.SPECIAL_CODE_OLD,:NEW.MAIDEN_FAMILY,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_PERSONAL (BRANCH,PERSONAL_CODE,COLLEAGUE_CODE,STATUS_CODE,SALARY_CODE,FAMILY,FIRST_NAME,PATRONYMIC,GENDER_CODE,BIRTHDAY,REGION_ID,DISTR,NATIONALITY_CODE,FAMILY_STATUS_CODE,REG_TYPE_CODE,HOME_ADDRESS,HOME_ADDRESSFACT,PASS_SERIYA,PASS_NUM,PASS_DATE,PASS_REG,RECORD_BOOK_NUMBER,RECORD_BOOK_SERIES,TELEFON,EMP_CODE,INS_DATE,PROFMEMBER,TABNO,EDUCATION_TITLE_CODE,BIRTHPLACE,MOTIVE_OUT,BASIS_NUM,BASIS_DATE,LEAVE_CODE,DEPARTMENT_CODE,POST_CODE,NN,MOTIVE_DISMISSIAL_CODE,NPS_ID,SPECIAL_CODE,COD_DISTR_UVD,COD_DISTR_PRIM,COD_STR_BIRTH,COD_OBL_PRIM,COD_PLACE_BIRTH_PRIM,COD_SITIZENT,COD_STR_SITIZENT,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_DISTR_LIVE,COD_DISTR_LIVE_PRIM,CODE_NACI_PRIM,CHECK_KFS,IS_BOSS,BANK_SPEC,NOTICE,PRICH_ID,NAME_PR,INN,SROK_DATE,HOME_ADDRESSFACT_REGION_ID,HOME_ADDRESSFACT_DISTR,HOME_ADDRESS_REGION_ID,HOME_ADDRESS_DISTR,PASSPORT_TYPE_CODE,REGPLACE_CODE,PASS_DATE_END,GOSUBMIT_CODE,LIVE_PLACE,BIRTHPLACE_POINT,DEPARTMENT_CODE_OLD,POST_CODE_OLD,SPECIAL_CODE_OLD,MAIDEN_FAMILY, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.COLLEAGUE_CODE,:OLD.STATUS_CODE,:OLD.SALARY_CODE,:OLD.FAMILY,:OLD.FIRST_NAME,:OLD.PATRONYMIC,:OLD.GENDER_CODE,:OLD.BIRTHDAY,:OLD.REGION_ID,:OLD.DISTR,:OLD.NATIONALITY_CODE,:OLD.FAMILY_STATUS_CODE,:OLD.REG_TYPE_CODE,:OLD.HOME_ADDRESS,:OLD.HOME_ADDRESSFACT,:OLD.PASS_SERIYA,:OLD.PASS_NUM,:OLD.PASS_DATE,:OLD.PASS_REG,:OLD.RECORD_BOOK_NUMBER,:OLD.RECORD_BOOK_SERIES,:OLD.TELEFON,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.PROFMEMBER,:OLD.TABNO,:OLD.EDUCATION_TITLE_CODE,:OLD.BIRTHPLACE,:OLD.MOTIVE_OUT,:OLD.BASIS_NUM,:OLD.BASIS_DATE,:OLD.LEAVE_CODE,:OLD.DEPARTMENT_CODE,:OLD.POST_CODE,:OLD.NN,:OLD.MOTIVE_DISMISSIAL_CODE,:OLD.NPS_ID,:OLD.SPECIAL_CODE,:OLD.COD_DISTR_UVD,:OLD.COD_DISTR_PRIM,:OLD.COD_STR_BIRTH,:OLD.COD_OBL_PRIM,:OLD.COD_PLACE_BIRTH_PRIM,:OLD.COD_SITIZENT,:OLD.COD_STR_SITIZENT,:OLD.COD_STR_LIVE,:OLD.COD_OBL_LIVE,:OLD.COD_OBL_LIVE_PRIM,:OLD.COD_DISTR_LIVE,:OLD.COD_DISTR_LIVE_PRIM,:OLD.CODE_NACI_PRIM,:OLD.CHECK_KFS,:OLD.IS_BOSS,:OLD.BANK_SPEC,:OLD.NOTICE,:OLD.PRICH_ID,:OLD.NAME_PR,:OLD.INN,:OLD.SROK_DATE,:OLD.HOME_ADDRESSFACT_REGION_ID,:OLD.HOME_ADDRESSFACT_DISTR,:OLD.HOME_ADDRESS_REGION_ID,:OLD.HOME_ADDRESS_DISTR,:OLD.PASSPORT_TYPE_CODE,:OLD.REGPLACE_CODE,:OLD.PASS_DATE_END,:OLD.GOSUBMIT_CODE,:OLD.LIVE_PLACE,:OLD.BIRTHPLACE_POINT,:OLD.DEPARTMENT_CODE_OLD,:OLD.POST_CODE_OLD,:OLD.SPECIAL_CODE_OLD,:OLD.MAIDEN_FAMILY,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_RELATION_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_RELATION
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_RELATION (BRANCH,PERSONAL_CODE,RELATION_CODE,RELATION_FAMILY,RELATION_NAME,RELATION_PATRONYMIC,RELATION_BIRTHDAY,RELATION_DEATHDAY,RELATION_BIRTHPLACE,RELATION_OFFICE,RELATION_POST,RELATION_HOME_ADDRESS,EMP_CODE,INS_DATE,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_CITY,COD_CITY_PRIM,COD_STR_LIVE_PRIM,COD_STR_BIRTH,COD_STR_BIRTH_PRIM,COD_OBL_BIRTH,COD_OBL_BIRTH_PRIM,COD_CITY_BIRTH,COD_CITY_BIRTH_PRIM,DD,MM,DD_DEATH,MM_DEATH, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.RELATION_CODE,:NEW.RELATION_FAMILY,:NEW.RELATION_NAME,:NEW.RELATION_PATRONYMIC,:NEW.RELATION_BIRTHDAY,:NEW.RELATION_DEATHDAY,:NEW.RELATION_BIRTHPLACE,:NEW.RELATION_OFFICE,:NEW.RELATION_POST,:NEW.RELATION_HOME_ADDRESS,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.COD_STR_LIVE,:NEW.COD_OBL_LIVE,:NEW.COD_OBL_LIVE_PRIM,:NEW.COD_CITY,:NEW.COD_CITY_PRIM,:NEW.COD_STR_LIVE_PRIM,:NEW.COD_STR_BIRTH,:NEW.COD_STR_BIRTH_PRIM,:NEW.COD_OBL_BIRTH,:NEW.COD_OBL_BIRTH_PRIM,:NEW.COD_CITY_BIRTH,:NEW.COD_CITY_BIRTH_PRIM,:NEW.DD,:NEW.MM,:NEW.DD_DEATH,:NEW.MM_DEATH,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_RELATION (BRANCH,PERSONAL_CODE,RELATION_CODE,RELATION_FAMILY,RELATION_NAME,RELATION_PATRONYMIC,RELATION_BIRTHDAY,RELATION_DEATHDAY,RELATION_BIRTHPLACE,RELATION_OFFICE,RELATION_POST,RELATION_HOME_ADDRESS,EMP_CODE,INS_DATE,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_CITY,COD_CITY_PRIM,COD_STR_LIVE_PRIM,COD_STR_BIRTH,COD_STR_BIRTH_PRIM,COD_OBL_BIRTH,COD_OBL_BIRTH_PRIM,COD_CITY_BIRTH,COD_CITY_BIRTH_PRIM,DD,MM,DD_DEATH,MM_DEATH, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.RELATION_CODE,:NEW.RELATION_FAMILY,:NEW.RELATION_NAME,:NEW.RELATION_PATRONYMIC,:NEW.RELATION_BIRTHDAY,:NEW.RELATION_DEATHDAY,:NEW.RELATION_BIRTHPLACE,:NEW.RELATION_OFFICE,:NEW.RELATION_POST,:NEW.RELATION_HOME_ADDRESS,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.COD_STR_LIVE,:NEW.COD_OBL_LIVE,:NEW.COD_OBL_LIVE_PRIM,:NEW.COD_CITY,:NEW.COD_CITY_PRIM,:NEW.COD_STR_LIVE_PRIM,:NEW.COD_STR_BIRTH,:NEW.COD_STR_BIRTH_PRIM,:NEW.COD_OBL_BIRTH,:NEW.COD_OBL_BIRTH_PRIM,:NEW.COD_CITY_BIRTH,:NEW.COD_CITY_BIRTH_PRIM,:NEW.DD,:NEW.MM,:NEW.DD_DEATH,:NEW.MM_DEATH,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_RELATION (BRANCH,PERSONAL_CODE,RELATION_CODE,RELATION_FAMILY,RELATION_NAME,RELATION_PATRONYMIC,RELATION_BIRTHDAY,RELATION_DEATHDAY,RELATION_BIRTHPLACE,RELATION_OFFICE,RELATION_POST,RELATION_HOME_ADDRESS,EMP_CODE,INS_DATE,COD_STR_LIVE,COD_OBL_LIVE,COD_OBL_LIVE_PRIM,COD_CITY,COD_CITY_PRIM,COD_STR_LIVE_PRIM,COD_STR_BIRTH,COD_STR_BIRTH_PRIM,COD_OBL_BIRTH,COD_OBL_BIRTH_PRIM,COD_CITY_BIRTH,COD_CITY_BIRTH_PRIM,DD,MM,DD_DEATH,MM_DEATH, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.RELATION_CODE,:OLD.RELATION_FAMILY,:OLD.RELATION_NAME,:OLD.RELATION_PATRONYMIC,:OLD.RELATION_BIRTHDAY,:OLD.RELATION_DEATHDAY,:OLD.RELATION_BIRTHPLACE,:OLD.RELATION_OFFICE,:OLD.RELATION_POST,:OLD.RELATION_HOME_ADDRESS,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.COD_STR_LIVE,:OLD.COD_OBL_LIVE,:OLD.COD_OBL_LIVE_PRIM,:OLD.COD_CITY,:OLD.COD_CITY_PRIM,:OLD.COD_STR_LIVE_PRIM,:OLD.COD_STR_BIRTH,:OLD.COD_STR_BIRTH_PRIM,:OLD.COD_OBL_BIRTH,:OLD.COD_OBL_BIRTH_PRIM,:OLD.COD_CITY_BIRTH,:OLD.COD_CITY_BIRTH_PRIM,:OLD.DD,:OLD.MM,:OLD.DD_DEATH,:OLD.MM_DEATH,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_RISE_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_RISE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_RISE (BRANCH,PERSONAL_CODE,RISE_DATE_YEAR,RISE_INFO,EMP_CODE,INS_DATE,RISE_DATE_MM,RISE_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.RISE_DATE_YEAR,:NEW.RISE_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.RISE_DATE_MM,:NEW.RISE_DATE_DD,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_RISE (BRANCH,PERSONAL_CODE,RISE_DATE_YEAR,RISE_INFO,EMP_CODE,INS_DATE,RISE_DATE_MM,RISE_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.RISE_DATE_YEAR,:NEW.RISE_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.RISE_DATE_MM,:NEW.RISE_DATE_DD,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_RISE (BRANCH,PERSONAL_CODE,RISE_DATE_YEAR,RISE_INFO,EMP_CODE,INS_DATE,RISE_DATE_MM,RISE_DATE_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.RISE_DATE_YEAR,:OLD.RISE_INFO,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.RISE_DATE_MM,:OLD.RISE_DATE_DD,info.getday,sysdate,3);
  end if;
END;
/
CREATE OR REPLACE TRIGGER TR_OK_VOYAGE_HIST
 BEFORE
 INSERT OR UPDATE OR DELETE
 ON OK_VOYAGE
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
new_id NUMBER;
BEGIN
  if inserting then
    insert into OK_HIST_VOYAGE (BRANCH,PERSONAL_CODE,VOYAGE_DATE,VOYAGE_LAND,VOYAGE_INFO,EMP_CODE,INS_DATE,VOYAGE_STR,DATA_IN,VOYAGE_DATE_MM,VOYAGE_DATE_DD,DATA_IN_MM,DATA_IN_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.VOYAGE_DATE,:NEW.VOYAGE_LAND,:NEW.VOYAGE_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.VOYAGE_STR,:NEW.DATA_IN,:NEW.VOYAGE_DATE_MM,:NEW.VOYAGE_DATE_DD,:NEW.DATA_IN_MM,:NEW.DATA_IN_DD,info.getday,sysdate,1);
  end if;
  if updating then
    insert into OK_HIST_VOYAGE (BRANCH,PERSONAL_CODE,VOYAGE_DATE,VOYAGE_LAND,VOYAGE_INFO,EMP_CODE,INS_DATE,VOYAGE_STR,DATA_IN,VOYAGE_DATE_MM,VOYAGE_DATE_DD,DATA_IN_MM,DATA_IN_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:NEW.BRANCH,:NEW.PERSONAL_CODE,:NEW.VOYAGE_DATE,:NEW.VOYAGE_LAND,:NEW.VOYAGE_INFO,:NEW.EMP_CODE,:NEW.INS_DATE,:NEW.VOYAGE_STR,:NEW.DATA_IN,:NEW.VOYAGE_DATE_MM,:NEW.VOYAGE_DATE_DD,:NEW.DATA_IN_MM,:NEW.DATA_IN_DD,info.getday,sysdate,2);
  end if;
  if deleting then
    insert into OK_HIST_VOYAGE (BRANCH,PERSONAL_CODE,VOYAGE_DATE,VOYAGE_LAND,VOYAGE_INFO,EMP_CODE,INS_DATE,VOYAGE_STR,DATA_IN,VOYAGE_DATE_MM,VOYAGE_DATE_DD,DATA_IN_MM,DATA_IN_DD, IIAS_VDATE, IIAS_SYSDATE, IIAS_CODE)
      values (:OLD.BRANCH,:OLD.PERSONAL_CODE,:OLD.VOYAGE_DATE,:OLD.VOYAGE_LAND,:OLD.VOYAGE_INFO,:OLD.EMP_CODE,:OLD.INS_DATE,:OLD.VOYAGE_STR,:OLD.DATA_IN,:OLD.VOYAGE_DATE_MM,:OLD.VOYAGE_DATE_DD,:OLD.DATA_IN_MM,:OLD.DATA_IN_DD,info.getday,sysdate,3);
  end if;
END;
/
