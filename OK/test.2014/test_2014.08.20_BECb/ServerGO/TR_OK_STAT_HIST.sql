CREATE OR REPLACE TRIGGER TR_OK_STAT_HIST
 AFTER
 INSERT OR DELETE OR UPDATE
 ON OK_STAT
 REFERENCING OLD AS OLD NEW AS NEW
 FOR EACH ROW
declare
emp_name_ varchar2(200);
user_name_ varchar2(200);
BEGIN
SELECT nvl(TRIM(INFO.GetUserName(INFO.GetEmpId)),SYS_CONTEXT('USERENV','SESSION_USER' )),
 SYS_CONTEXT('USERENV','SESSION_USER' )
 INTO EMP_NAME_,user_name_ FROM DUAL;
   IF INSERTING THEN
      INSERT INTO OK_STAT_HIST
      (ID,  BRANCH,  STAT_CODE,  DEPARTMENT_CODE,  POST_CODE,  QUANTITY_POST,  SPECIAL_CODE,ACT,EMP_NAME,user_name,INS_DATE) VALUES
      ( :NEW.ID, :NEW.BRANCH, :NEW.STAT_CODE, :NEW.DEPARTMENT_CODE, :NEW.POST_CODE, :NEW.QUANTITY_POST, :NEW.SPECIAL_CODE,
       'I',EMP_NAME_,user_name_,sysdate);
   END IF;
  IF UPDATING THEN
      INSERT INTO OK_STAT_HIST
      (ID,  BRANCH,  STAT_CODE,  DEPARTMENT_CODE,  POST_CODE,  QUANTITY_POST,  SPECIAL_CODE,ACT,EMP_NAME,user_name,INS_DATE) VALUES
      ( :NEW.ID, :NEW.BRANCH, :NEW.STAT_CODE, :NEW.DEPARTMENT_CODE, :NEW.POST_CODE, :NEW.QUANTITY_POST, :NEW.SPECIAL_CODE,
       'U',EMP_NAME_,user_name_,sysdate);
   END IF;
   IF DELETING THEN
      INSERT INTO OK_STAT_HIST
      (ID,  BRANCH,  STAT_CODE,  DEPARTMENT_CODE,  POST_CODE,  QUANTITY_POST,  SPECIAL_CODE,ACT,EMP_NAME,user_name,INS_DATE) VALUES
      ( :OLD.ID, :OLD.BRANCH, :OLD.STAT_CODE, :OLD.DEPARTMENT_CODE, :OLD.POST_CODE, :OLD.QUANTITY_POST, :OLD.SPECIAL_CODE,
      'D',EMP_NAME_,user_name_,sysdate);
   END IF;
END;
/
